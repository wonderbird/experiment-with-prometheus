global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

rule_files:
  - '/etc/prometheus/prometheus.rules.yml'

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # Scrape the prometheus metrics themselves
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'sample-metrics-generator'
    # Scrape my sample ASP.NET Core service
    static_configs:
      - targets: ['sample-metrics-generator:80']

  - job_name: 'blackbox'
    # Probe my outbound internet connection by monitoring the connection to Google
    # See https://github.com/jbarratt/prometheus_sitemon/blob/master/docker-compose.yml
    # and https://github.com/prometheus/blackbox_exporter
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        # CAUTION: Emacs inserts <tab> characters in the following lines - replace them by spaces!
        - https://www.heise.de
        - https://www.rtl.de
        - https://www.prosieben.de
        - https://www.google.de
        - https://www.prometheus.io
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - source_labels: []
        target_label: __address__
        replacement: blackbox-exporter:9115

  - job_name: 'example-random'
    # This job is created during the Prometheus Getting Started tutorial
    static_configs:
      - targets: ['client1:8080', 'client2:8080']
        labels:
          group: 'production'
      - targets: ['client3:8080']
        labels:
          group: 'canary'
